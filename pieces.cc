#include "pieces.h"

// Piece definitions
char makePieces [7][4][5][5] =           /* [Number][Rotation][HBlocks][VBlocks] */
{

	// Square
	{
		{
			{0, 0, 0, 0, 0},
			{0, 0, 0, 0, 0},
			{0, 0, 2, 1, 0},
		    {0, 0, 1, 1, 0},
		    {0, 0, 0, 0, 0}
		},
		{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 2, 1, 0},
		    {0, 0, 1, 1, 0},
		    {0, 0, 0, 0, 0}
		},
		{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 2, 1, 0},
		    {0, 0, 1, 1, 0},
		    {0, 0, 0, 0, 0}
		},
		{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 2, 1, 0},
		    {0, 0, 1, 1, 0},
		    {0, 0, 0, 0, 0}
		}
	},

	// I
	{
		{
    		{0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 1, 2, 1, 1},
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
   		{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 0, 0}, 
		    {0, 0, 2, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 1, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {1, 1, 2, 1, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 1, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 2, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    }
	},
	
	// L
	{
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 2, 0, 0},
		    {0, 0, 1, 1, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 1, 2, 1, 0},
		    {0, 1, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 1, 1, 0, 0},
		    {0, 0, 2, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 1, 0},
		    {0, 1, 2, 1, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    }
	},
	
	// L mirrored
	{
	   	{
	    	{0, 0, 0, 0, 0},
	    	{0, 0, 1, 0, 0},
	    	{0, 0, 2, 0, 0},
	    	{0, 1, 1, 0, 0},
	    	{0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 1, 0, 0, 0},
		    {0, 1, 2, 1, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 1, 0},
		    {0, 0, 2, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 1, 2, 1, 0},
		    {0, 0, 0, 1, 0},
		    {0, 0, 0, 0, 0}
	    }
	},
	
	// N
	{
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 1, 0},
		    {0, 0, 2, 1, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 1, 2, 0, 0},
		    {0, 0, 1, 1, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 1, 2, 0, 0},
		    {0, 1, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 1, 1, 0, 0},
		    {0, 0, 2, 1, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    }
	},
	
	// N mirrored
	{
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 2, 1, 0},
		    {0, 0, 0, 1, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 2, 1, 0},
		    {0, 1, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 1, 0, 0, 0},
		    {0, 1, 2, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 1, 0},
		    {0, 1, 2, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    }
	},
	
	// T
	{
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 2, 1, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0},
		    {0, 1, 2, 1, 0},
		    {0, 0, 1, 0, 0},
		    {0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 1, 2, 0, 0},
		    {0, 0, 1, 0, 0},
	    	{0, 0, 0, 0, 0}
	    },
	   	{
		    {0, 0, 0, 0, 0},
		    {0, 0, 1, 0, 0},
		    {0, 1, 2, 1, 0},
		    {0, 0, 0, 0, 0},
		    {0, 0, 0, 0, 0}
	    }
	}
};

// Displacement from the starting co-ordinate of the block piece which should appear first and be centered.
int makePiecesPosInitial [7][4][2] =      /* [Number][Rotation][Position] */
{
	/* Square */
  	{
		{-2, -3}, 
	    {-2, -3},
	    {-2, -3},
	    {-2, -3}
   	},
	
	/* I */
	{
		{-2, -2},
	    {-2, -3},
	    {-2, -2},
	    {-2, -3}
	},
	
	/* L */
	{
		{-2, -3},
	    {-2, -3},
	    {-2, -3},
	    {-2, -2}
	},
	
	/* L mirrored */
	{
		{-2, -3},
	    {-2, -2},
	    {-2, -3},
	    {-2, -3}
	},
	
	/* N */
	{
		{-2, -3},
	    {-2, -3},
	    {-2, -3},
	    {-2, -2}
	},
	
	/* N mirrored */
	{
		{-2, -3},
	    {-2, -3},
	    {-2, -3},
	    {-2, -2}
	},
	
	/* T */
	{
		{-2, -3},
	    {-2, -3},
	    {-2, -3},
	    {-2, -2}
   	},
};

/* 
Return the type of a block (0 = no block, 1 = normal block, 2 = pivot block)
*/
int Pieces::returnBlockType (int retPiece, int retRotation, int retX, int retY)
{
	return makePieces [retPiece][retRotation][retX][retY];
}


/* 
Return the horizontal displacement required by the piece to be in correct initial position.
*/
int Pieces::returnXPosInitial (int retPiece, int retRotation)
{
	return makePiecesPosInitial [retPiece][retRotation][0];
}


/* 
Return the vertical displacement required by the piece to be in correct initial position.
*/
int Pieces::returnYPosInitial (int retPiece, int retRotation)
{
	return makePiecesPosInitial [retPiece][retRotation][1];
}